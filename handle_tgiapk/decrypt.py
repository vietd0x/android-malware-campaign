#!/usr/bin/env python

# PoC decrypt files in tg.iapk
# Modified version (to compatible with unzip_tg_iapk.py) from McAiden Consulting Co., Ltd. (2023.01.23)
import sys
import os
import binascii

def xor(b1, b2): # use xor for bytes
  result = b""
  for b1, b2 in zip(b1, b2):
    result += bytes([b1 ^ b2])
  return result

fullPath = ""
with open(sys.argv[1], 'rb') as f:
  fullPath = sys.argv[1]
  print(f"[+] {fullPath}")
  fileName = os.path.basename(fullPath)
  data = f.read()
  fileMagic = binascii.hexlify(data[0:4]).decode("ascii")
  fileHeaderLengthStr = binascii.hexlify(data[4:8]).decode("ascii")
  fileHeaderLength = int(fileHeaderLengthStr,16)
  fileHeader = binascii.hexlify(data[8:8+fileHeaderLength])
  decodedFileHeader = bytes.fromhex(bytes.fromhex(fileHeader.decode("ascii")).decode("ascii")).decode("ascii")

  fileContentLength = int(str(decodedFileHeader).rsplit('|', 1)[-1],0)
  fileNameLength = len(fileName)
  encryptedFileName = data[(-1)*(fileNameLength + fileContentLength):len(data) - fileContentLength]
  fileContent = data[(-1)*fileContentLength:]

#  print("[!] fileMagic: " + str(fileMagic))
#  print("[!] fileHeaderLength: " + str(fileHeaderLengthStr) + ", " + str(fileHeaderLength))
#  print("[!] fileHeader: " + str(fileHeader))
#  print("[!] decodedFileHeader: " + str(decodedFileHeader))
#  print("[!] fileContentLength: " + str(fileContentLength))
#  print("[!] fileNameLength: " + str(fileNameLength))
#  print("[!] encryptedFileName: " + str(binascii.hexlify(encryptedFileName)))
#  print("[!] fileContent: " + str(binascii.hexlify(fileContent)))

  a = fileName.encode('utf-8')[0:1]
  b = encryptedFileName[0:1]
  print("[!] a: " + str(a))
  print("[!] b: " + str(b))
  
  c = xor(a,b)
  key = c
  print("[!] key: " + str(key))

  decryptedContent = b""
  for i in range(0,len(fileContent)):
    decryptedContent += xor(fileContent[i:i+1], key)

  try:
    newfilename = os.path.basename(fullPath)
    dir = fullPath.split("\\")[:-1]
    f = open(".\\".join(dir) + "\\" + "dec_" + newfilename, "wb")
    f.write(decryptedContent)
    f.close()
    #print("[!] saved to file: " + "dec_" + newfilename)
  except Exception as e:
    raise e

# remove the enc files
os.remove(fullPath)